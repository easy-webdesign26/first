'use strict';

var leftBorderLeft = 1; /*Где   var - переменная
                                leftBorderLeft - имя переменной
                                = - знак присвоения
                                1 - значение переменной. */

let second = 2;  /* Разница между var и let в том, что если var объявлена в коде,
                    то она существует еще до выполнения скрипта. Т.е. не важно 
                    в каком месте записана переменная var, она будет существовать. */

const pi = 3.14; /* const - переменная которая никогда не меняется */


/* ТИПЫ ДАННЫХ */

var num = 4; /* Число */
var string = 'Иван'; /* Строка */
var sym = Symbol(); /* Символ */
var bollean = true; /* Логический тип данных, где false = не правда/выключен/нет, true = правда/включен/да. */
null; /*не существующий объект, переменная и т.д.*/
undefined; /* Переменная или объект не имеющий значение*/
let obj = {}; /* Объект - коллекция данных. */

let persone = {
    name: 'John',
    age: 25,
    isMarried: false
};

console.log(persone.name); /* persone.name - обращение/получение к первому свойству объекта, чтобы его вытащить, повлиять, поменять и тд */
console.log(persone['name']); /* Способ необходимый если мы хотим добраться до свойства заданным любой строкой */


let arr = ['plun.png', 'orange.jpeg', 'apple.bmp']; /* Массив - разновидность объекта, используюется для хранения данных,
                                                        которые идут по порядку */

console.log(arr[2]); /* Обращение/получение 3-го элемента массива. Нумерация в java.script начинается с нуля а не с 1. */




/* Команды общения с пользователем */

alert('Hello World'); /* Самое простое модальное окно с контентом */

let answer = confirm('Есть ли вам 18?'); /* Модальное окно с вопросом к пользователю и вариантами ответов да/нет */

console.log(answer);

let ans = +prompt('Есть ли вам 18?', 'Да');   /* Модальное окно с вопросом к пользователю и Возможностью вписать свой ответ
                                            (в ковычках записан готовый вариант ответа, который будет введен в модальном окне и который
                                            можно изменить) 
                                            + превращает строку в число*/

console.log(typeof(ans)); - /*typeof - оператор на проверку вида данных */

console.log("arr" + "- object"); /* Конкатинация - сложение 2х строк в 1. Если сложить строку и число то все равно получится строка */



/* ОПЕРАТОРЫ */

// let incr = 10;
//     decr = 10;

// incr++; /* Инкремент (++) - оператор увеличивающий значение переменной на 1. Записан в посфиксной форме, то есть после записи переменной  */
// decr--; /* Дискремент (--) - оператор уменьшающий значение переменной на 1. Записан в посфиксной форме, то есть после записи переменной */

// ++incr; /* Записан в префиксной форме, то есть перед переменной. Возвращает измененное число на единицу */
// --decr; /* Записан в префиксной форме, то есть перед переменной. Возвращает измененное число на единицу */

// = /* Знак присваивания */
// == /* Знак равенства сравниваемый по значениям */
// === /* Знак равенства сравниваемый по типам данных */

// && /* Логический оператор "и". Возвращает правду только тогда, когда все указанные объекты имеют значение true */

let isChecked = true,
    isClose = false;

console.log(isChecked && isClose);

// || /*Логический оператор "или". Всегда возвращает правду, если имеется хотя бы одна переменная со значением true */

console.log(isChecked || isClose);

// ! Логический оператор отрицания, то есть обращает значение в обратное

console.log(isChecked || !isClose);


